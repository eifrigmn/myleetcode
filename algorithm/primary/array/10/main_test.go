package _10

import (
	. "github.com/smartystreets/goconvey/convey"
	"testing"
)

func TestIsValidSudoku(t *testing.T) {
	Convey("有效的数独", t, func() {
		nums := [][]string{
			{"5","3",".",".","7",".",".",".","."},
			{"6",".",".","1","9","5",".",".","."},
			{".","9","8",".",".",".",".","6","."},
			{"8",".",".",".","6",".",".",".","3"},
			{"4",".",".","8",".","3",".",".","1"},
			{"7",".",".",".","2",".",".",".","6"},
			{".","6",".",".",".",".","2","8","."},
			{".",".",".","4","1","9",".",".","5"},
			{".",".",".",".","8",".",".","7","9"},
		}
		board := createInput(nums)
		So(isValidSudoku(board), ShouldBeTrue)

		nums = [][]string{
			{"8","3",".",".","7",".",".",".","."},
			{"6",".",".","1","9","5",".",".","."},
			{".","9","8",".",".",".",".","6","."},
			{"8",".",".",".","6",".",".",".","3"},
			{"4",".",".","8",".","3",".",".","1"},
			{"7",".",".",".","2",".",".",".","6"},
			{".","6",".",".",".",".","2","8","."},
			{".",".",".","4","1","9",".",".","5"},
			{".",".",".",".","8",".",".","7","9"},
		}
		board = createInput(nums)
		So(isValidSudoku(board), ShouldBeFalse)

		nums = [][]string{
			{".","8","7","6","5","4","3","2","1"},
			{"2",".",".",".",".",".",".",".","."},
			{"3",".",".",".",".",".",".",".","."},
			{"4",".",".",".",".",".",".",".","."},
			{"5",".",".",".",".",".",".",".","."},
			{"6",".",".",".",".",".",".",".","."},
			{"7",".",".",".",".",".",".",".","."},
			{"8",".",".",".",".",".",".",".","."},
			{"9",".",".",".",".",".",".",".","."},
		}
		board = createInput(nums)
		So(isValidSudoku(board), ShouldBeTrue)

		nums = [][]string{
			{"7",".",".",".","4",".",".",".","."},
			{".",".",".","8","6","5",".",".","."},
			{".","1",".","2",".",".",".",".","."},
			{".",".",".",".",".","9",".",".","."},
			{".",".",".",".","5",".","5",".","."},
			{".",".",".",".",".",".",".",".","."},
			{".",".",".",".",".",".","2",".","."},
			{".",".",".",".",".",".",".",".","."},
			{".",".",".",".",".",".",".",".","."},
		}
		board = createInput(nums)
		So(isValidSudoku(board), ShouldBeFalse)
	})
}

func createInput(nums [][]string) [][]byte {
	var result [][]byte
	for i:=0;i<len(nums);i++{
		var d []byte
		for j := 0;j<len(nums[i]);j++{
			d = append(d, []byte(nums[i][j])...)
		}
		result = append(result, d)
	}
	return result
}
